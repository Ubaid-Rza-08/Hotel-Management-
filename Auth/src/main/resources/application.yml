spring:
  application:
    name: hotel-management

  # File Upload Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 10MB

  # Email Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

# Server Configuration
server:
  port: 8080

# Application Configuration
app:
  name: Hotel Management System
  oauth2:
    default-redirect-url: http://localhost:3000/auth/callback
    authorized-redirect-uris:
      - http://localhost:3000/auth/callback
      - http://localhost:3000/login
      - http://localhost:8080/auth/callback

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

# Firebase Configuration
firebase:
  service-account-key-path: ${FIREBASE_SERVICE_ACCOUNT_KEY_PATH}
  project-id: ${FIREBASE_PROJECT_ID}

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  access-token-ms: 900000
  refresh-token-ms: 604800000
  cleanup:
    cron: "0 0 2 * * *"

# OTP Configuration
otp:
  expiry-minutes: 10

# Profile Image Configuration
profile:
  image:
    max-size-mb: 5
    allowed-types:
      - image/jpeg
      - image/jpg
      - image/png
      - image/gif
      - image/webp

# CORS Configuration
cors:
  allowed-origins: "*"
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers: "*"

# Logging Configuration
logging:
  level:
    com.ubaid.Auth: INFO
    com.ubaid.Auth.service.CloudinaryService: INFO
    com.ubaid.Auth.controller.ProfileController: INFO
    com.ubaid.Auth.service.AuthService: INFO
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.security.web: DEBUG
    com.hotel.management: DEBUG
